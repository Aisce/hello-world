<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.early.warning.dao.mapper.gen.EarlywarningEventMapper" >
  <resultMap id="BaseResultMap" type="com.cana.early.warning.dao.po.EarlywarningEvent" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="finance_id" property="financeId" jdbcType="VARCHAR" />
    <result column="finance_company" property="financeCompany" jdbcType="VARCHAR" />
    <result column="out_customer_id" property="outCustomerId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="sub_type" property="subType" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="entry_user_id" property="entryUserId" jdbcType="VARCHAR" />
    <result column="entry_real_name" property="entryRealName" jdbcType="VARCHAR" />
    <result column="entry_review_time" property="entryReviewTime" jdbcType="TIMESTAMP" />
    <result column="cancel_user_id" property="cancelUserId" jdbcType="VARCHAR" />
    <result column="cancel_real_name" property="cancelRealName" jdbcType="VARCHAR" />
    <result column="cancel_review_time" property="cancelReviewTime" jdbcType="TIMESTAMP" />
    <result column="occur_time" property="occurTime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="represent" property="represent" jdbcType="VARCHAR" />
    <result column="extra_data" property="extraData" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_id, finance_id, finance_company, out_customer_id, type, sub_type, level, 
    entry_user_id, entry_real_name, entry_review_time, cancel_user_id, cancel_real_name, 
    cancel_review_time, occur_time, amount, represent, extra_data, state, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.early.warning.dao.po.EarlywarningEventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from early_warning_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from early_warning_event
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from early_warning_event
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.early.warning.dao.po.EarlywarningEventExample" >
    delete from early_warning_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.early.warning.dao.po.EarlywarningEvent" >
    insert into early_warning_event (id, product_id, finance_id, 
      finance_company, out_customer_id, type, 
      sub_type, level, entry_user_id, 
      entry_real_name, entry_review_time, cancel_user_id, 
      cancel_real_name, cancel_review_time, occur_time, 
      amount, represent, extra_data, 
      state, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{financeId,jdbcType=VARCHAR}, 
      #{financeCompany,jdbcType=VARCHAR}, #{outCustomerId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{subType,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{entryUserId,jdbcType=VARCHAR}, 
      #{entryRealName,jdbcType=VARCHAR}, #{entryReviewTime,jdbcType=TIMESTAMP}, #{cancelUserId,jdbcType=VARCHAR}, 
      #{cancelRealName,jdbcType=VARCHAR}, #{cancelReviewTime,jdbcType=TIMESTAMP}, #{occurTime,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=DECIMAL}, #{represent,jdbcType=VARCHAR}, #{extraData,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cana.early.warning.dao.po.EarlywarningEvent" >
    insert into early_warning_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="financeId != null" >
        finance_id,
      </if>
      <if test="financeCompany != null" >
        finance_company,
      </if>
      <if test="outCustomerId != null" >
        out_customer_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="subType != null" >
        sub_type,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="entryUserId != null" >
        entry_user_id,
      </if>
      <if test="entryRealName != null" >
        entry_real_name,
      </if>
      <if test="entryReviewTime != null" >
        entry_review_time,
      </if>
      <if test="cancelUserId != null" >
        cancel_user_id,
      </if>
      <if test="cancelRealName != null" >
        cancel_real_name,
      </if>
      <if test="cancelReviewTime != null" >
        cancel_review_time,
      </if>
      <if test="occurTime != null" >
        occur_time,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="represent != null" >
        represent,
      </if>
      <if test="extraData != null" >
        extra_data,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null" >
        #{financeId,jdbcType=VARCHAR},
      </if>
      <if test="financeCompany != null" >
        #{financeCompany,jdbcType=VARCHAR},
      </if>
      <if test="outCustomerId != null" >
        #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="subType != null" >
        #{subType,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="entryUserId != null" >
        #{entryUserId,jdbcType=VARCHAR},
      </if>
      <if test="entryRealName != null" >
        #{entryRealName,jdbcType=VARCHAR},
      </if>
      <if test="entryReviewTime != null" >
        #{entryReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelUserId != null" >
        #{cancelUserId,jdbcType=VARCHAR},
      </if>
      <if test="cancelRealName != null" >
        #{cancelRealName,jdbcType=VARCHAR},
      </if>
      <if test="cancelReviewTime != null" >
        #{cancelReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurTime != null" >
        #{occurTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="represent != null" >
        #{represent,jdbcType=VARCHAR},
      </if>
      <if test="extraData != null" >
        #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.early.warning.dao.po.EarlywarningEventExample" resultType="java.lang.Integer" >
    select count(*) from early_warning_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update early_warning_event
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.financeId != null" >
        finance_id = #{record.financeId,jdbcType=VARCHAR},
      </if>
      <if test="record.financeCompany != null" >
        finance_company = #{record.financeCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.outCustomerId != null" >
        out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.subType != null" >
        sub_type = #{record.subType,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.entryUserId != null" >
        entry_user_id = #{record.entryUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.entryRealName != null" >
        entry_real_name = #{record.entryRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.entryReviewTime != null" >
        entry_review_time = #{record.entryReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelUserId != null" >
        cancel_user_id = #{record.cancelUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelRealName != null" >
        cancel_real_name = #{record.cancelRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelReviewTime != null" >
        cancel_review_time = #{record.cancelReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.occurTime != null" >
        occur_time = #{record.occurTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.represent != null" >
        represent = #{record.represent,jdbcType=VARCHAR},
      </if>
      <if test="record.extraData != null" >
        extra_data = #{record.extraData,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update early_warning_event
    set id = #{record.id,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      finance_id = #{record.financeId,jdbcType=VARCHAR},
      finance_company = #{record.financeCompany,jdbcType=VARCHAR},
      out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      sub_type = #{record.subType,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      entry_user_id = #{record.entryUserId,jdbcType=VARCHAR},
      entry_real_name = #{record.entryRealName,jdbcType=VARCHAR},
      entry_review_time = #{record.entryReviewTime,jdbcType=TIMESTAMP},
      cancel_user_id = #{record.cancelUserId,jdbcType=VARCHAR},
      cancel_real_name = #{record.cancelRealName,jdbcType=VARCHAR},
      cancel_review_time = #{record.cancelReviewTime,jdbcType=TIMESTAMP},
      occur_time = #{record.occurTime,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DECIMAL},
      represent = #{record.represent,jdbcType=VARCHAR},
      extra_data = #{record.extraData,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.early.warning.dao.po.EarlywarningEvent" >
    update early_warning_event
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null" >
        finance_id = #{financeId,jdbcType=VARCHAR},
      </if>
      <if test="financeCompany != null" >
        finance_company = #{financeCompany,jdbcType=VARCHAR},
      </if>
      <if test="outCustomerId != null" >
        out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="subType != null" >
        sub_type = #{subType,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="entryUserId != null" >
        entry_user_id = #{entryUserId,jdbcType=VARCHAR},
      </if>
      <if test="entryRealName != null" >
        entry_real_name = #{entryRealName,jdbcType=VARCHAR},
      </if>
      <if test="entryReviewTime != null" >
        entry_review_time = #{entryReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelUserId != null" >
        cancel_user_id = #{cancelUserId,jdbcType=VARCHAR},
      </if>
      <if test="cancelRealName != null" >
        cancel_real_name = #{cancelRealName,jdbcType=VARCHAR},
      </if>
      <if test="cancelReviewTime != null" >
        cancel_review_time = #{cancelReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurTime != null" >
        occur_time = #{occurTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="represent != null" >
        represent = #{represent,jdbcType=VARCHAR},
      </if>
      <if test="extraData != null" >
        extra_data = #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.early.warning.dao.po.EarlywarningEvent" >
    update early_warning_event
    set product_id = #{productId,jdbcType=VARCHAR},
      finance_id = #{financeId,jdbcType=VARCHAR},
      finance_company = #{financeCompany,jdbcType=VARCHAR},
      out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sub_type = #{subType,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      entry_user_id = #{entryUserId,jdbcType=VARCHAR},
      entry_real_name = #{entryRealName,jdbcType=VARCHAR},
      entry_review_time = #{entryReviewTime,jdbcType=TIMESTAMP},
      cancel_user_id = #{cancelUserId,jdbcType=VARCHAR},
      cancel_real_name = #{cancelRealName,jdbcType=VARCHAR},
      cancel_review_time = #{cancelReviewTime,jdbcType=TIMESTAMP},
      occur_time = #{occurTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      represent = #{represent,jdbcType=VARCHAR},
      extra_data = #{extraData,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from early_warning_event
    where id = #{id}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.early.warning.dao.po.EarlywarningEventExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from early_warning_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>