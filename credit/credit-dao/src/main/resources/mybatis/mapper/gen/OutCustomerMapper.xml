<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.credit.dao.mapper.gen.OutCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.cana.credit.dao.po.OutCustomer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="out_customer_id" property="outCustomerId" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="institution_id" property="institutionId" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, out_customer_id, member_id, institution_id, company_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.credit.dao.po.OutCustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from credit_out_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credit_out_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from credit_out_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.credit.dao.po.OutCustomerExample" >
    delete from credit_out_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.credit.dao.po.OutCustomer" >
    insert into credit_out_customer (id, out_customer_id, member_id, 
      institution_id, company_name)
    values (#{id,jdbcType=INTEGER}, #{outCustomerId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{institutionId,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cana.credit.dao.po.OutCustomer" >
    insert into credit_out_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outCustomerId != null" >
        out_customer_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="institutionId != null" >
        institution_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outCustomerId != null" >
        #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="institutionId != null" >
        #{institutionId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.credit.dao.po.OutCustomerExample" resultType="java.lang.Integer" >
    select count(*) from credit_out_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update credit_out_customer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.outCustomerId != null" >
        out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionId != null" >
        institution_id = #{record.institutionId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update credit_out_customer
    set id = #{record.id,jdbcType=INTEGER},
      out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      institution_id = #{record.institutionId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.credit.dao.po.OutCustomer" >
    update credit_out_customer
    <set >
      <if test="outCustomerId != null" >
        out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="institutionId != null" >
        institution_id = #{institutionId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.credit.dao.po.OutCustomer" >
    update credit_out_customer
    set out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      institution_id = #{institutionId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credit_out_customer
    where id = #{id}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.credit.dao.po.OutCustomerExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from credit_out_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>