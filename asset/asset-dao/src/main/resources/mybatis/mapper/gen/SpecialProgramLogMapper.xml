<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.asset.dao.mapper.gen.SpecialProgramLogMapper" >
  <resultMap id="BaseResultMap" type="com.cana.asset.dao.po.SpecialProgramLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="special_program_id" property="specialProgramId" jdbcType="VARCHAR" />
    <result column="special_program_name" property="specialProgramName" jdbcType="VARCHAR" />
    <result column="underlying_asset_type" property="underlyingAssetType" jdbcType="VARCHAR" />
    <result column="asset_pool_amount" property="assetPoolAmount" jdbcType="DECIMAL" />
    <result column="operate_company_name" property="operateCompanyName" jdbcType="VARCHAR" />
    <result column="operate_username" property="operateUsername" jdbcType="VARCHAR" />
    <result column="operate_type" property="operateType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, special_program_id, special_program_name, underlying_asset_type, asset_pool_amount, 
    operate_company_name, operate_username, operate_type, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.SpecialProgramLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_special_program_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_special_program_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from asset_special_program_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.asset.dao.po.SpecialProgramLogExample" >
    delete from asset_special_program_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.asset.dao.po.SpecialProgramLog" >
    insert into asset_special_program_log (id, special_program_id, special_program_name, 
      underlying_asset_type, asset_pool_amount, operate_company_name, 
      operate_username, operate_type, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{specialProgramId,jdbcType=VARCHAR}, #{specialProgramName,jdbcType=VARCHAR}, 
      #{underlyingAssetType,jdbcType=VARCHAR}, #{assetPoolAmount,jdbcType=DECIMAL}, #{operateCompanyName,jdbcType=VARCHAR}, 
      #{operateUsername,jdbcType=VARCHAR}, #{operateType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cana.asset.dao.po.SpecialProgramLog" >
    insert into asset_special_program_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="specialProgramId != null" >
        special_program_id,
      </if>
      <if test="specialProgramName != null" >
        special_program_name,
      </if>
      <if test="underlyingAssetType != null" >
        underlying_asset_type,
      </if>
      <if test="assetPoolAmount != null" >
        asset_pool_amount,
      </if>
      <if test="operateCompanyName != null" >
        operate_company_name,
      </if>
      <if test="operateUsername != null" >
        operate_username,
      </if>
      <if test="operateType != null" >
        operate_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="specialProgramId != null" >
        #{specialProgramId,jdbcType=VARCHAR},
      </if>
      <if test="specialProgramName != null" >
        #{specialProgramName,jdbcType=VARCHAR},
      </if>
      <if test="underlyingAssetType != null" >
        #{underlyingAssetType,jdbcType=VARCHAR},
      </if>
      <if test="assetPoolAmount != null" >
        #{assetPoolAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateCompanyName != null" >
        #{operateCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="operateUsername != null" >
        #{operateUsername,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.asset.dao.po.SpecialProgramLogExample" resultType="java.lang.Integer" >
    select count(*) from asset_special_program_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update asset_special_program_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.specialProgramId != null" >
        special_program_id = #{record.specialProgramId,jdbcType=VARCHAR},
      </if>
      <if test="record.specialProgramName != null" >
        special_program_name = #{record.specialProgramName,jdbcType=VARCHAR},
      </if>
      <if test="record.underlyingAssetType != null" >
        underlying_asset_type = #{record.underlyingAssetType,jdbcType=VARCHAR},
      </if>
      <if test="record.assetPoolAmount != null" >
        asset_pool_amount = #{record.assetPoolAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.operateCompanyName != null" >
        operate_company_name = #{record.operateCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateUsername != null" >
        operate_username = #{record.operateUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.operateType != null" >
        operate_type = #{record.operateType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update asset_special_program_log
    set id = #{record.id,jdbcType=VARCHAR},
      special_program_id = #{record.specialProgramId,jdbcType=VARCHAR},
      special_program_name = #{record.specialProgramName,jdbcType=VARCHAR},
      underlying_asset_type = #{record.underlyingAssetType,jdbcType=VARCHAR},
      asset_pool_amount = #{record.assetPoolAmount,jdbcType=DECIMAL},
      operate_company_name = #{record.operateCompanyName,jdbcType=VARCHAR},
      operate_username = #{record.operateUsername,jdbcType=VARCHAR},
      operate_type = #{record.operateType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.asset.dao.po.SpecialProgramLog" >
    update asset_special_program_log
    <set >
      <if test="specialProgramId != null" >
        special_program_id = #{specialProgramId,jdbcType=VARCHAR},
      </if>
      <if test="specialProgramName != null" >
        special_program_name = #{specialProgramName,jdbcType=VARCHAR},
      </if>
      <if test="underlyingAssetType != null" >
        underlying_asset_type = #{underlyingAssetType,jdbcType=VARCHAR},
      </if>
      <if test="assetPoolAmount != null" >
        asset_pool_amount = #{assetPoolAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateCompanyName != null" >
        operate_company_name = #{operateCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="operateUsername != null" >
        operate_username = #{operateUsername,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.asset.dao.po.SpecialProgramLog" >
    update asset_special_program_log
    set special_program_id = #{specialProgramId,jdbcType=VARCHAR},
      special_program_name = #{specialProgramName,jdbcType=VARCHAR},
      underlying_asset_type = #{underlyingAssetType,jdbcType=VARCHAR},
      asset_pool_amount = #{assetPoolAmount,jdbcType=DECIMAL},
      operate_company_name = #{operateCompanyName,jdbcType=VARCHAR},
      operate_username = #{operateUsername,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_special_program_log
    where id = #{id}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.SpecialProgramLogExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_special_program_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>