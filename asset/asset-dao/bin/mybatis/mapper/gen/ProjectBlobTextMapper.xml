<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.asset.dao.mapper.gen.ProjectBlobTextMapper" >
  <resultMap id="BaseResultMap" type="com.cana.asset.dao.po.ProjectBlobText" >
    <id column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cana.asset.dao.po.ProjectBlobTextWithBLOBs" extends="BaseResultMap" >
    <result column="product_introduction" property="productIntroduction" jdbcType="LONGVARCHAR" />
    <result column="product_type_desc" property="productTypeDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    project_id, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    product_introduction, product_type_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cana.asset.dao.po.ProjectBlobTextExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from asset_project_blob_text
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.ProjectBlobTextExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_project_blob_text
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from asset_project_blob_text
    where project_id = #{projectId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from asset_project_blob_text
    where project_id = #{projectId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.asset.dao.po.ProjectBlobTextExample" >
    delete from asset_project_blob_text
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.asset.dao.po.ProjectBlobTextWithBLOBs" >
    insert into asset_project_blob_text (project_id, create_time, update_time, 
      product_introduction, product_type_desc
      )
    values (#{projectId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{productIntroduction,jdbcType=LONGVARCHAR}, #{productTypeDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cana.asset.dao.po.ProjectBlobTextWithBLOBs" >
    insert into asset_project_blob_text
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="productIntroduction != null" >
        product_introduction,
      </if>
      <if test="productTypeDesc != null" >
        product_type_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productIntroduction != null" >
        #{productIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="productTypeDesc != null" >
        #{productTypeDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.asset.dao.po.ProjectBlobTextExample" resultType="java.lang.Integer" >
    select count(*) from asset_project_blob_text
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update asset_project_blob_text
    <set >
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productIntroduction != null" >
        product_introduction = #{record.productIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.productTypeDesc != null" >
        product_type_desc = #{record.productTypeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update asset_project_blob_text
    set project_id = #{record.projectId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      product_introduction = #{record.productIntroduction,jdbcType=LONGVARCHAR},
      product_type_desc = #{record.productTypeDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update asset_project_blob_text
    set project_id = #{record.projectId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.asset.dao.po.ProjectBlobTextWithBLOBs" >
    update asset_project_blob_text
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productIntroduction != null" >
        product_introduction = #{productIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="productTypeDesc != null" >
        product_type_desc = #{productTypeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cana.asset.dao.po.ProjectBlobTextWithBLOBs" >
    update asset_project_blob_text
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      product_introduction = #{productIntroduction,jdbcType=LONGVARCHAR},
      product_type_desc = #{productTypeDesc,jdbcType=LONGVARCHAR}
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.asset.dao.po.ProjectBlobText" >
    update asset_project_blob_text
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_project_blob_text
    where project_id = #{projectId}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.ProjectBlobTextExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_project_blob_text
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>