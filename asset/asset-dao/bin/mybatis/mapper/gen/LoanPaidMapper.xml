<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.asset.dao.mapper.gen.LoanPaidMapper" >
  <resultMap id="BaseResultMap" type="com.cana.asset.dao.po.LoanPaid" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="loan_info_id" property="loanInfoId" jdbcType="VARCHAR" />
    <result column="loan_plan_id" property="loanPlanId" jdbcType="VARCHAR" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="paid_principal" property="paidPrincipal" jdbcType="DECIMAL" />
    <result column="paid_interest" property="paidInterest" jdbcType="DECIMAL" />
    <result column="paid_overdue" property="paidOverdue" jdbcType="DECIMAL" />
    <result column="paid_date" property="paidDate" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, loan_info_id, loan_plan_id, paid_amount, paid_principal, paid_interest, paid_overdue, 
    paid_date, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.LoanPaidExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_loan_paid
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_loan_paid
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from asset_loan_paid
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.asset.dao.po.LoanPaidExample" >
    delete from asset_loan_paid
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.asset.dao.po.LoanPaid" >
    insert into asset_loan_paid (id, loan_info_id, loan_plan_id, 
      paid_amount, paid_principal, paid_interest, 
      paid_overdue, paid_date, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{loanInfoId,jdbcType=VARCHAR}, #{loanPlanId,jdbcType=VARCHAR}, 
      #{paidAmount,jdbcType=DECIMAL}, #{paidPrincipal,jdbcType=DECIMAL}, #{paidInterest,jdbcType=DECIMAL}, 
      #{paidOverdue,jdbcType=DECIMAL}, #{paidDate,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cana.asset.dao.po.LoanPaid" >
    insert into asset_loan_paid
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loanInfoId != null" >
        loan_info_id,
      </if>
      <if test="loanPlanId != null" >
        loan_plan_id,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="paidPrincipal != null" >
        paid_principal,
      </if>
      <if test="paidInterest != null" >
        paid_interest,
      </if>
      <if test="paidOverdue != null" >
        paid_overdue,
      </if>
      <if test="paidDate != null" >
        paid_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loanInfoId != null" >
        #{loanInfoId,jdbcType=VARCHAR},
      </if>
      <if test="loanPlanId != null" >
        #{loanPlanId,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidPrincipal != null" >
        #{paidPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="paidInterest != null" >
        #{paidInterest,jdbcType=DECIMAL},
      </if>
      <if test="paidOverdue != null" >
        #{paidOverdue,jdbcType=DECIMAL},
      </if>
      <if test="paidDate != null" >
        #{paidDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.asset.dao.po.LoanPaidExample" resultType="java.lang.Integer" >
    select count(*) from asset_loan_paid
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update asset_loan_paid
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.loanInfoId != null" >
        loan_info_id = #{record.loanInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.loanPlanId != null" >
        loan_plan_id = #{record.loanPlanId,jdbcType=VARCHAR},
      </if>
      <if test="record.paidAmount != null" >
        paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paidPrincipal != null" >
        paid_principal = #{record.paidPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="record.paidInterest != null" >
        paid_interest = #{record.paidInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.paidOverdue != null" >
        paid_overdue = #{record.paidOverdue,jdbcType=DECIMAL},
      </if>
      <if test="record.paidDate != null" >
        paid_date = #{record.paidDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update asset_loan_paid
    set id = #{record.id,jdbcType=VARCHAR},
      loan_info_id = #{record.loanInfoId,jdbcType=VARCHAR},
      loan_plan_id = #{record.loanPlanId,jdbcType=VARCHAR},
      paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      paid_principal = #{record.paidPrincipal,jdbcType=DECIMAL},
      paid_interest = #{record.paidInterest,jdbcType=DECIMAL},
      paid_overdue = #{record.paidOverdue,jdbcType=DECIMAL},
      paid_date = #{record.paidDate,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.asset.dao.po.LoanPaid" >
    update asset_loan_paid
    <set >
      <if test="loanInfoId != null" >
        loan_info_id = #{loanInfoId,jdbcType=VARCHAR},
      </if>
      <if test="loanPlanId != null" >
        loan_plan_id = #{loanPlanId,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidPrincipal != null" >
        paid_principal = #{paidPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="paidInterest != null" >
        paid_interest = #{paidInterest,jdbcType=DECIMAL},
      </if>
      <if test="paidOverdue != null" >
        paid_overdue = #{paidOverdue,jdbcType=DECIMAL},
      </if>
      <if test="paidDate != null" >
        paid_date = #{paidDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.asset.dao.po.LoanPaid" >
    update asset_loan_paid
    set loan_info_id = #{loanInfoId,jdbcType=VARCHAR},
      loan_plan_id = #{loanPlanId,jdbcType=VARCHAR},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      paid_principal = #{paidPrincipal,jdbcType=DECIMAL},
      paid_interest = #{paidInterest,jdbcType=DECIMAL},
      paid_overdue = #{paidOverdue,jdbcType=DECIMAL},
      paid_date = #{paidDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_loan_paid
    where id = #{id}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.asset.dao.po.LoanPaidExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_loan_paid
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>