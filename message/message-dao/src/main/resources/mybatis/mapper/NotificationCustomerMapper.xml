<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.message.dao.mapper.NotificationCustomerMapper" >
  <resultMap id="CustomResultMap" type="com.cana.message.dao.po.Notification" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="BIT" />
    <result column="send_user_id" property="sendUserId" jdbcType="VARCHAR" />
    <result column="receive_user_id" property="receiveUserId" jdbcType="VARCHAR" />
    <result column="receive_customer_id" property="receiveCustomerId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="detail_url" property="detailUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="find" resultMap="CustomResultMap" parameterType="com.cana.vbam.common.message.dto.NotificationQueryCriteria" >
    select * from message_notification
    <include refid="Where_Clause"/>
    order by id desc
    limit ${(page-1)*pageSize}, ${pageSize}
  </select>

  <select id="count" parameterType="com.cana.vbam.common.message.dto.NotificationQueryCriteria" resultType="java.lang.Integer" >
    select count(*) from message_notification 
    <include refid="Where_Clause" />
  </select>

  <sql id="Where_Clause" >
    <where >
      <if test="type != null">
        and type = #{type,jdbcType=VARCHAR}
      </if>
	  <if test="notificationTypes != null">
      	and type in
      	<foreach item="item" index="index" collection="notificationTypes" open="(" separator="," close=")">  
  			#{item}  
 		</foreach> 
      </if>
      <if test="beginTime != null">
        <![CDATA[
        	and create_time >= #{beginTime, jdbcType=TIMESTAMP}
        ]]>
      </if>
      <if test="endTime != null">
        and create_time &lt; #{endTime, jdbcType=TIMESTAMP}
      </if>
      <if test="isRead != null">
        and is_read = #{isRead,jdbcType=BIT}
      </if>
        and (
	        (receive_user_id = #{userId,jdbcType=VARCHAR})
	      	or
	        (receive_customer_id = #{customerId,jdbcType=VARCHAR})
	        )
    </where>
  </sql>
</mapper>