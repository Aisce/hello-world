<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.setting.dao.mapper.gen.CanaCalendarMapper" >
  <resultMap id="BaseResultMap" type="com.cana.setting.dao.po.CanaCalendar" >
    <id column="date" property="date" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="day" property="day" jdbcType="INTEGER" />
    <result column="day_of_week" property="dayOfWeek" jdbcType="VARCHAR" />
    <result column="is_holiday" property="isHoliday" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="holiday_upate_time" property="holidayUpateTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    date, year, month, day, day_of_week, is_holiday, description, operator_id, holiday_upate_time, 
    update_time, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.setting.dao.po.CanaCalendarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from setting_calendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from setting_calendar
    where date = #{date,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from setting_calendar
    where date = #{date,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.setting.dao.po.CanaCalendarExample" >
    delete from setting_calendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.setting.dao.po.CanaCalendar" >
    insert into setting_calendar (date, year, month, 
      day, day_of_week, is_holiday, 
      description, operator_id, holiday_upate_time, 
      update_time, create_time)
    values (#{date,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{day,jdbcType=INTEGER}, #{dayOfWeek,jdbcType=VARCHAR}, #{isHoliday,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{holidayUpateTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cana.setting.dao.po.CanaCalendar" >
    insert into setting_calendar
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        date,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="dayOfWeek != null" >
        day_of_week,
      </if>
      <if test="isHoliday != null" >
        is_holiday,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="holidayUpateTime != null" >
        holiday_upate_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null" >
        #{day,jdbcType=INTEGER},
      </if>
      <if test="dayOfWeek != null" >
        #{dayOfWeek,jdbcType=VARCHAR},
      </if>
      <if test="isHoliday != null" >
        #{isHoliday,jdbcType=BIT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="holidayUpateTime != null" >
        #{holidayUpateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.setting.dao.po.CanaCalendarExample" resultType="java.lang.Integer" >
    select count(*) from setting_calendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update setting_calendar
    <set >
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.day != null" >
        day = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.dayOfWeek != null" >
        day_of_week = #{record.dayOfWeek,jdbcType=VARCHAR},
      </if>
      <if test="record.isHoliday != null" >
        is_holiday = #{record.isHoliday,jdbcType=BIT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.holidayUpateTime != null" >
        holiday_upate_time = #{record.holidayUpateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update setting_calendar
    set date = #{record.date,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      day = #{record.day,jdbcType=INTEGER},
      day_of_week = #{record.dayOfWeek,jdbcType=VARCHAR},
      is_holiday = #{record.isHoliday,jdbcType=BIT},
      description = #{record.description,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      holiday_upate_time = #{record.holidayUpateTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.setting.dao.po.CanaCalendar" >
    update setting_calendar
    <set >
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null" >
        day = #{day,jdbcType=INTEGER},
      </if>
      <if test="dayOfWeek != null" >
        day_of_week = #{dayOfWeek,jdbcType=VARCHAR},
      </if>
      <if test="isHoliday != null" >
        is_holiday = #{isHoliday,jdbcType=BIT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="holidayUpateTime != null" >
        holiday_upate_time = #{holidayUpateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where date = #{date,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.setting.dao.po.CanaCalendar" >
    update setting_calendar
    set year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      day = #{day,jdbcType=INTEGER},
      day_of_week = #{dayOfWeek,jdbcType=VARCHAR},
      is_holiday = #{isHoliday,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      holiday_upate_time = #{holidayUpateTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where date = #{date,jdbcType=VARCHAR}
  </update>
  <select id="lockByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from setting_calendar
    where date = #{date}  for update 
  </select>
  <select id="lockByExample" resultMap="BaseResultMap" parameterType="com.cana.setting.dao.po.CanaCalendarExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from setting_calendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
       order by #{orderByClause} 
    </if>
    <if test="limitStart >= 0" >
       limit #{limitStart} , #{limitEnd} 
    </if>
     for update 
  </select>
</mapper>