<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cana.repayment.dao.mapper.gen.RepaymentDailyBatchTaskItemMapper" >
  <resultMap id="BaseResultMap" type="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItem" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="task_type" property="taskType" jdbcType="VARCHAR" />
    <result column="execute_time" property="executeTime" jdbcType="CHAR" />
    <result column="extra_data" property="extraData" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="upate_time" property="upateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, task_id, sequence, task_type, execute_time, extra_data, detail, create_time, 
    upate_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repayment_daily_batch_task_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from repayment_daily_batch_task_item
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from repayment_daily_batch_task_item
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItemExample" >
    delete from repayment_daily_batch_task_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItem" >
    insert into repayment_daily_batch_task_item (id, task_id, sequence, 
      task_type, execute_time, extra_data, 
      detail, create_time, upate_time
      )
    values (#{id,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, 
      #{taskType,jdbcType=VARCHAR}, #{executeTime,jdbcType=CHAR}, #{extraData,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{upateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItem" >
    insert into repayment_daily_batch_task_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="taskType != null" >
        task_type,
      </if>
      <if test="executeTime != null" >
        execute_time,
      </if>
      <if test="extraData != null" >
        extra_data,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="upateTime != null" >
        upate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="taskType != null" >
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null" >
        #{executeTime,jdbcType=CHAR},
      </if>
      <if test="extraData != null" >
        #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upateTime != null" >
        #{upateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItemExample" resultType="java.lang.Integer" >
    select count(*) from repayment_daily_batch_task_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repayment_daily_batch_task_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.taskType != null" >
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.executeTime != null" >
        execute_time = #{record.executeTime,jdbcType=CHAR},
      </if>
      <if test="record.extraData != null" >
        extra_data = #{record.extraData,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upateTime != null" >
        upate_time = #{record.upateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repayment_daily_batch_task_item
    set id = #{record.id,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      execute_time = #{record.executeTime,jdbcType=CHAR},
      extra_data = #{record.extraData,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      upate_time = #{record.upateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItem" >
    update repayment_daily_batch_task_item
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="taskType != null" >
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null" >
        execute_time = #{executeTime,jdbcType=CHAR},
      </if>
      <if test="extraData != null" >
        extra_data = #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upateTime != null" >
        upate_time = #{upateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cana.repayment.dao.po.RepaymentDailyBatchTaskItem" >
    update repayment_daily_batch_task_item
    set task_id = #{taskId,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      task_type = #{taskType,jdbcType=VARCHAR},
      execute_time = #{executeTime,jdbcType=CHAR},
      extra_data = #{extraData,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      upate_time = #{upateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>